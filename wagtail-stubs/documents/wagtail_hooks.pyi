from typing import Any
from wagtail.admin.menu import MenuItem as MenuItem
from wagtail.admin.navigation import get_site_for_user as get_site_for_user
from wagtail.admin.rich_text import HalloPlugin as HalloPlugin
from wagtail.admin.search import SearchArea as SearchArea
from wagtail.admin.site_summary import SummaryItem as SummaryItem
from wagtail.core import hooks as hooks
from wagtail.core.models import BaseViewRestriction as BaseViewRestriction
from wagtail.core.wagtail_hooks import require_wagtail_login as require_wagtail_login
from wagtail.documents import admin_urls as admin_urls, get_document_model as get_document_model
from wagtail.documents.api.admin.views import DocumentsAdminAPIViewSet as DocumentsAdminAPIViewSet
from wagtail.documents.forms import GroupDocumentPermissionFormSet as GroupDocumentPermissionFormSet
from wagtail.documents.permissions import permission_policy as permission_policy
from wagtail.documents.rich_text import DocumentLinkHandler as DocumentLinkHandler
from wagtail.documents.rich_text.contentstate import ContentstateDocumentLinkConversionRule as ContentstateDocumentLinkConversionRule
from wagtail.documents.rich_text.editor_html import EditorHTMLDocumentLinkConversionRule as EditorHTMLDocumentLinkConversionRule

def register_admin_urls(): ...
def construct_admin_api(router: Any) -> None: ...

class DocumentsMenuItem(MenuItem):
    def is_shown(self, request: Any): ...

def register_documents_menu_item(): ...
def editor_js(): ...
def register_document_feature(features: Any) -> None: ...

class DocumentsSummaryItem(SummaryItem):
    order: int = ...
    template: str = ...
    def get_context(self): ...
    def is_shown(self): ...

def add_documents_summary_item(request: Any, items: Any) -> None: ...

class DocsSearchArea(SearchArea):
    def is_shown(self, request: Any): ...

def register_documents_search_area(): ...
def register_document_permissions_panel(): ...
def describe_collection_docs(collection: Any): ...
def check_view_restrictions(document: Any, request: Any): ...
