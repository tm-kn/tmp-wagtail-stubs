from django.views.generic import ListView, TemplateView
from typing import Any
from wagtail.admin import messages as messages
from wagtail.admin.views.mixins import SpreadsheetExportMixin as SpreadsheetExportMixin
from wagtail.contrib.forms.forms import SelectDateForm as SelectDateForm
from wagtail.contrib.forms.utils import get_forms_for_user as get_forms_for_user
from wagtail.core.models import Page as Page

def get_submissions_list_view(request: Any, *args: Any, **kwargs: Any): ...

class SafePaginateListView(ListView):
    paginate_by: int = ...
    page_kwarg: str = ...
    def paginate_queryset(self, queryset: Any, page_size: Any): ...

class FormPagesListView(SafePaginateListView):
    template_name: str = ...
    context_object_name: str = ...
    def get_queryset(self): ...

class DeleteSubmissionsView(TemplateView):
    template_name: str = ...
    page: Any = ...
    submissions: Any = ...
    success_url: str = ...
    def get_queryset(self): ...
    def handle_delete(self, submissions: Any) -> None: ...
    def get_success_url(self): ...
    def dispatch(self, request: Any, *args: Any, **kwargs: Any): ...
    def get_context_data(self, **kwargs: Any): ...

class SubmissionsListView(SpreadsheetExportMixin, SafePaginateListView):
    template_name: str = ...
    context_object_name: str = ...
    form_page: Any = ...
    ordering: Any = ...
    ordering_csv: Any = ...
    orderable_fields: Any = ...
    select_date_form: Any = ...
    is_export: Any = ...
    paginate_by: Any = ...
    list_export: Any = ...
    export_headings: Any = ...
    def dispatch(self, request: Any, *args: Any, **kwargs: Any): ...
    def get_queryset(self): ...
    def get_paginate_by(self, queryset: Any): ...
    def get_validated_ordering(self): ...
    def get_ordering(self): ...
    def get_filtering(self): ...
    def get_filename(self): ...
    def render_to_response(self, context: Any, **response_kwargs: Any): ...
    def to_row_dict(self, item: Any): ...
    def get_context_data(self, **kwargs: Any): ...
