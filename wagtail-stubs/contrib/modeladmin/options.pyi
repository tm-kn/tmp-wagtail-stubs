from .helpers import AdminURLHelper as AdminURLHelper, ButtonHelper as ButtonHelper, DjangoORMSearchHandler as DjangoORMSearchHandler, PageAdminURLHelper as PageAdminURLHelper, PageButtonHelper as PageButtonHelper, PagePermissionHelper as PagePermissionHelper, PermissionHelper as PermissionHelper
from .menus import GroupMenuItem as GroupMenuItem, ModelAdminMenuItem as ModelAdminMenuItem, SubMenu as SubMenu
from .mixins import ThumbnailMixin as ThumbnailMixin
from .views import ChooseParentView as ChooseParentView, CreateView as CreateView, DeleteView as DeleteView, EditView as EditView, IndexView as IndexView, InspectView as InspectView
from typing import Any, Optional
from wagtail.admin.checks import check_panels_in_model as check_panels_in_model
from wagtail.admin.edit_handlers import ObjectList as ObjectList, extract_panel_definitions_from_model_class as extract_panel_definitions_from_model_class
from wagtail.core import hooks as hooks
from wagtail.core.models import Page as Page

class WagtailRegisterable:
    add_to_settings_menu: bool = ...
    exclude_from_explorer: bool = ...
    def register_with_wagtail(self): ...
    def will_modify_explorer_page_queryset(self): ...

class ModelAdmin(WagtailRegisterable):
    model: Any = ...
    menu_label: Any = ...
    menu_icon: Any = ...
    menu_order: Any = ...
    list_display: Any = ...
    list_display_add_buttons: Any = ...
    list_export: Any = ...
    inspect_view_fields: Any = ...
    inspect_view_fields_exclude: Any = ...
    inspect_view_enabled: bool = ...
    empty_value_display: str = ...
    list_filter: Any = ...
    list_select_related: bool = ...
    list_per_page: int = ...
    search_fields: Any = ...
    ordering: Any = ...
    parent: Any = ...
    prepopulated_fields: Any = ...
    index_view_class: Any = ...
    create_view_class: Any = ...
    edit_view_class: Any = ...
    inspect_view_class: Any = ...
    delete_view_class: Any = ...
    choose_parent_view_class: Any = ...
    index_template_name: str = ...
    create_template_name: str = ...
    edit_template_name: str = ...
    inspect_template_name: str = ...
    delete_template_name: str = ...
    choose_parent_template_name: str = ...
    search_handler_class: Any = ...
    extra_search_kwargs: Any = ...
    permission_helper_class: Any = ...
    url_helper_class: Any = ...
    button_helper_class: Any = ...
    index_view_extra_css: Any = ...
    index_view_extra_js: Any = ...
    inspect_view_extra_css: Any = ...
    inspect_view_extra_js: Any = ...
    form_view_extra_css: Any = ...
    form_view_extra_js: Any = ...
    form_fields_exclude: Any = ...
    opts: Any = ...
    is_pagemodel: Any = ...
    permission_helper: Any = ...
    url_helper: Any = ...
    admin_site: Any = ...
    def __init__(self, parent: Optional[Any] = ...) -> None: ...
    def get_permission_helper_class(self): ...
    def get_url_helper_class(self): ...
    def get_button_helper_class(self): ...
    def get_menu_label(self): ...
    def get_menu_icon(self): ...
    def get_menu_order(self): ...
    def get_list_display(self, request: Any): ...
    def get_list_display_add_buttons(self, request: Any): ...
    def get_list_export(self, request: Any): ...
    def get_empty_value_display(self, field_name: Optional[Any] = ...): ...
    def get_list_filter(self, request: Any): ...
    def get_ordering(self, request: Any): ...
    def get_queryset(self, request: Any): ...
    def get_search_fields(self, request: Any): ...
    def get_search_handler(self, request: Any, search_fields: Optional[Any] = ...): ...
    def get_extra_search_kwargs(self, request: Any, search_term: Any): ...
    def get_extra_attrs_for_row(self, obj: Any, context: Any): ...
    def get_extra_class_names_for_field_col(self, obj: Any, field_name: Any): ...
    def get_extra_attrs_for_field_col(self, obj: Any, field_name: Any): ...
    def get_prepopulated_fields(self, request: Any): ...
    def get_form_fields_exclude(self, request: Any): ...
    def get_index_view_extra_css(self): ...
    def get_index_view_extra_js(self): ...
    def get_form_view_extra_css(self): ...
    def get_form_view_extra_js(self): ...
    def get_inspect_view_extra_css(self): ...
    def get_inspect_view_extra_js(self): ...
    def get_inspect_view_fields(self): ...
    def index_view(self, request: Any): ...
    def create_view(self, request: Any): ...
    def choose_parent_view(self, request: Any): ...
    def inspect_view(self, request: Any, instance_pk: Any): ...
    def edit_view(self, request: Any, instance_pk: Any): ...
    def delete_view(self, request: Any, instance_pk: Any): ...
    def get_edit_handler(self, instance: Any, request: Any): ...
    def get_templates(self, action: str = ...): ...
    def get_index_template(self): ...
    def get_choose_parent_template(self): ...
    def get_inspect_template(self): ...
    def get_create_template(self): ...
    def get_edit_template(self): ...
    def get_delete_template(self): ...
    def get_menu_item(self, order: Optional[Any] = ...): ...
    def get_permissions_for_registration(self): ...
    def get_admin_urls_for_registration(self): ...
    def will_modify_explorer_page_queryset(self): ...
    def modify_explorer_page_queryset(self, parent_page: Any, queryset: Any, request: Any): ...
    def register_with_wagtail(self): ...

class ModelAdminGroup(WagtailRegisterable):
    items: Any = ...
    menu_label: Any = ...
    menu_order: Any = ...
    menu_icon: Any = ...
    modeladmin_instances: Any = ...
    def __init__(self) -> None: ...
    def get_menu_label(self): ...
    def get_app_label_from_subitems(self): ...
    def get_menu_icon(self): ...
    def get_menu_order(self): ...
    def get_menu_item(self): ...
    def get_submenu_items(self): ...
    def get_permissions_for_registration(self): ...
    def get_admin_urls_for_registration(self): ...
    def will_modify_explorer_page_queryset(self): ...
    def modify_explorer_page_queryset(self, parent_page: Any, queryset: Any, request: Any): ...
    def register_with_wagtail(self): ...

def modeladmin_register(modeladmin_class: Any): ...
