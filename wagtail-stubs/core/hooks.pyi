from contextlib import ContextDecorator
from typing import Any, Optional
from wagtail.utils.apps import get_app_submodules as get_app_submodules

def register(hook_name: Any, fn: Optional[Any] = ..., order: int = ...): ...

class TemporaryHook(ContextDecorator):
    hook_name: Any = ...
    fn: Any = ...
    order: Any = ...
    def __init__(self, hook_name: Any, fn: Any, order: Any) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None: ...

def register_temporarily(hook_name: Any, fn: Any, order: int = ...): ...
def search_for_hooks() -> None: ...
def get_hooks(hook_name: Any): ...
