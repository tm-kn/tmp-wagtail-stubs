from typing import Any, Optional

class BasePermissionPolicy:
    model: Any = ...
    def __init__(self, model: Any) -> None: ...
    def user_has_permission(self, user: Any, action: Any): ...
    def user_has_any_permission(self, user: Any, actions: Any): ...
    def users_with_any_permission(self, actions: Any) -> None: ...
    def users_with_permission(self, action: Any): ...
    def user_has_permission_for_instance(self, user: Any, action: Any, instance: Any): ...
    def user_has_any_permission_for_instance(self, user: Any, actions: Any, instance: Any): ...
    def instances_user_has_any_permission_for(self, user: Any, actions: Any): ...
    def instances_user_has_permission_for(self, user: Any, action: Any): ...
    def users_with_any_permission_for_instance(self, actions: Any, instance: Any): ...
    def users_with_permission_for_instance(self, action: Any, instance: Any): ...

class BlanketPermissionPolicy(BasePermissionPolicy):
    def user_has_permission(self, user: Any, action: Any): ...
    def user_has_any_permission(self, user: Any, actions: Any): ...
    def users_with_any_permission(self, actions: Any): ...
    def users_with_permission(self, action: Any): ...

class AuthenticationOnlyPermissionPolicy(BasePermissionPolicy):
    def user_has_permission(self, user: Any, action: Any): ...
    def user_has_any_permission(self, user: Any, actions: Any): ...
    def users_with_any_permission(self, actions: Any): ...
    def users_with_permission(self, action: Any): ...

class BaseDjangoAuthPermissionPolicy(BasePermissionPolicy):
    auth_model: Any = ...
    app_label: Any = ...
    model_name: Any = ...
    def __init__(self, model: Any, auth_model: Optional[Any] = ...) -> None: ...

class ModelPermissionPolicy(BaseDjangoAuthPermissionPolicy):
    def user_has_permission(self, user: Any, action: Any): ...
    def users_with_any_permission(self, actions: Any): ...

class OwnershipPermissionPolicy(BaseDjangoAuthPermissionPolicy):
    owner_field_name: Any = ...
    def __init__(self, model: Any, auth_model: Optional[Any] = ..., owner_field_name: str = ...) -> None: ...
    def user_has_permission(self, user: Any, action: Any): ...
    def users_with_any_permission(self, actions: Any): ...
    def user_has_permission_for_instance(self, user: Any, action: Any, instance: Any): ...
    def user_has_any_permission_for_instance(self, user: Any, actions: Any, instance: Any): ...
    def instances_user_has_any_permission_for(self, user: Any, actions: Any): ...
    def users_with_any_permission_for_instance(self, actions: Any, instance: Any): ...
