from django.db import models
from typing import Any, Optional
from wagtail.core.blocks import Block as Block, BlockField as BlockField, StreamBlock as StreamBlock, StreamValue as StreamValue
from wagtail.core.rich_text import get_text_for_indexing as get_text_for_indexing

class RichTextField(models.TextField):
    editor: Any = ...
    features: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def formfield(self, **kwargs: Any): ...
    def get_searchable_content(self, value: Any): ...

class Creator:
    field: Any = ...
    def __init__(self, field: Any) -> None: ...
    def __get__(self, obj: Any, type: Optional[Any] = ...): ...
    def __set__(self, obj: Any, value: Any) -> None: ...

class StreamField(models.Field):
    stream_block: Any = ...
    def __init__(self, block_types: Any, **kwargs: Any) -> None: ...
    def get_internal_type(self): ...
    def get_panel(self): ...
    def deconstruct(self): ...
    def to_python(self, value: Any): ...
    def get_prep_value(self, value: Any): ...
    def from_db_value(self, value: Any, expression: Any, connection: Any): ...
    def formfield(self, **kwargs: Any): ...
    def value_to_string(self, obj: Any): ...
    def get_searchable_content(self, value: Any): ...
    def check(self, **kwargs: Any): ...
    def contribute_to_class(self, cls: Any, name: Any, **kwargs: Any) -> None: ...
