from typing import Any

class cached_classmethod(dict):
    fn: Any = ...
    def __init__(self, fn: Any) -> None: ...
    def __get__(self, instance: Any, owner: Any): ...
    def __missing__(self, cls: Any): ...

class _cache:
    cache: Any = ...
    cls: Any = ...
    fn: Any = ...
    def __init__(self, cache: Any, cls: Any, fn: Any) -> None: ...
    def value(self): ...
    def __call__(self): ...
    def cache_clear(self) -> None: ...
