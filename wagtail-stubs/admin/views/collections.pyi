from typing import Any
from wagtail.admin import messages as messages
from wagtail.admin.forms.collections import CollectionForm as CollectionForm
from wagtail.admin.views.generic import CreateView as CreateView, DeleteView as DeleteView, EditView as EditView, IndexView as IndexView
from wagtail.core import hooks as hooks
from wagtail.core.models import Collection as Collection
from wagtail.core.permissions import collection_permission_policy as collection_permission_policy

class Index(IndexView):
    permission_policy: Any = ...
    model: Any = ...
    context_object_name: str = ...
    template_name: str = ...
    add_url_name: str = ...
    page_title: Any = ...
    add_item_label: Any = ...
    header_icon: str = ...
    def get_queryset(self): ...

class Create(CreateView):
    permission_policy: Any = ...
    form_class: Any = ...
    page_title: Any = ...
    success_message: Any = ...
    add_url_name: str = ...
    edit_url_name: str = ...
    index_url_name: str = ...
    header_icon: str = ...
    def save_instance(self): ...

class Edit(EditView):
    permission_policy: Any = ...
    model: Any = ...
    form_class: Any = ...
    template_name: str = ...
    success_message: Any = ...
    error_message: Any = ...
    delete_item_label: Any = ...
    edit_url_name: str = ...
    index_url_name: str = ...
    delete_url_name: str = ...
    context_object_name: str = ...
    header_icon: str = ...
    def save_instance(self): ...
    def form_valid(self, form: Any): ...
    def get_queryset(self): ...

class Delete(DeleteView):
    permission_policy: Any = ...
    model: Any = ...
    success_message: Any = ...
    index_url_name: str = ...
    delete_url_name: str = ...
    page_title: Any = ...
    confirmation_message: Any = ...
    header_icon: str = ...
    def get_queryset(self): ...
    def get_collection_contents(self): ...
    template_name: str = ...
    def get_context_data(self, **kwargs: Any): ...
    object: Any = ...
    def post(self, request: Any, pk: Any): ...
