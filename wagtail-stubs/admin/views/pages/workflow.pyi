from django.views.generic import View
from typing import Any
from wagtail.admin import messages as messages
from wagtail.admin.auth import user_has_any_page_permission as user_has_any_page_permission, user_passes_test as user_passes_test
from wagtail.admin.modal_workflow import render_modal_workflow as render_modal_workflow
from wagtail.core.models import Page as Page, Task as Task, TaskState as TaskState, WorkflowState as WorkflowState

class BaseWorkflowFormView(View):
    page: Any = ...
    action_name: Any = ...
    redirect_to: Any = ...
    task_state: Any = ...
    task: Any = ...
    action_verbose_name: str = ...
    action_modal: bool = ...
    form_class: Any = ...
    def dispatch(self, request: Any, page_id: Any, action_name: Any, task_state_id: Any): ...
    def post(self, request: Any, page_id: Any, action_name: Any, task_state_id: Any) -> None: ...
    def get(self, request: Any, page_id: Any, action_name: Any, task_state_id: Any): ...
    def get_submit_url(self) -> None: ...
    def render_modal_form(self, request: Any, form: Any): ...

class WorkflowAction(BaseWorkflowFormView):
    def post(self, request: Any, page_id: Any, action_name: Any, task_state_id: Any): ...
    def get_submit_url(self): ...

class CollectWorkflowActionData(BaseWorkflowFormView):
    def post(self, request: Any, page_id: Any, action_name: Any, task_state_id: Any): ...
    def get_submit_url(self): ...

def confirm_workflow_cancellation(request: Any, page_id: Any): ...
def workflow_status(request: Any, page_id: Any): ...
def preview_revision_for_task(request: Any, page_id: Any, task_id: Any): ...
