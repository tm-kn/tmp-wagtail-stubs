from django.views.generic.base import ContextMixin, TemplateResponseMixin, View
from typing import Any
from wagtail.admin import messages as messages
from wagtail.admin.action_menu import PageActionMenu as PageActionMenu
from wagtail.admin.views.generic import HookResponseMixin as HookResponseMixin
from wagtail.admin.views.pages.utils import get_valid_next_url_from_request as get_valid_next_url_from_request
from wagtail.core.exceptions import PageClassNotFoundError as PageClassNotFoundError
from wagtail.core.models import Page as Page, UserPagePermissionsProxy as UserPagePermissionsProxy, WorkflowState as WorkflowState

class EditView(TemplateResponseMixin, ContextMixin, HookResponseMixin, View):
    def get_template_names(self): ...
    def add_legacy_moderation_warning(self) -> None: ...
    def add_save_confirmation_message(self) -> None: ...
    def get_edit_message_button(self): ...
    def get_view_draft_message_button(self): ...
    def get_view_live_message_button(self): ...
    def get_compare_with_live_message_button(self): ...
    def get_page_for_status(self): ...
    real_page_record: Any = ...
    latest_revision: Any = ...
    page_content_type: Any = ...
    page_class: Any = ...
    page: Any = ...
    parent: Any = ...
    page_perms: Any = ...
    next_url: Any = ...
    edit_handler: Any = ...
    form_class: Any = ...
    workflow_state: Any = ...
    workflow_tasks: Any = ...
    errors_debug: Any = ...
    def dispatch(self, request: Any, page_id: Any): ...
    form: Any = ...
    has_unsaved_changes: bool = ...
    page_for_status: Any = ...
    def get(self, request: Any): ...
    def add_cancel_workflow_confirmation_message(self) -> None: ...
    is_cancelling_workflow: Any = ...
    def post(self, request: Any): ...
    workflow_action: Any = ...
    def workflow_action_is_valid(self): ...
    is_reverting: Any = ...
    previous_revision: Any = ...
    has_content_changes: Any = ...
    def form_valid(self, form: Any): ...
    def save_action(self): ...
    def publish_action(self): ...
    def submit_action(self): ...
    def restart_workflow_action(self): ...
    def perform_workflow_action(self): ...
    def cancel_workflow_action(self): ...
    def redirect_away(self): ...
    def redirect_and_remain(self): ...
    def form_invalid(self, form: Any): ...
    def get_context_data(self, **kwargs: Any): ...
