from django.views.generic.base import TemplateResponseMixin
from django.views.generic.edit import BaseCreateView, BaseDeleteView, BaseUpdateView
from django.views.generic.list import BaseListView
from typing import Any, Optional
from wagtail.admin import messages as messages
from wagtail.core import hooks as hooks

class PermissionCheckedMixin:
    permission_policy: Any = ...
    permission_required: Any = ...
    any_permission_required: Any = ...
    def dispatch(self, request: Any, *args: Any, **kwargs: Any): ...

class HookResponseMixin:
    def run_hook(self, hook_name: Any, *args: Any, **kwargs: Any): ...

class IndexView(PermissionCheckedMixin, TemplateResponseMixin, BaseListView):
    model: Any = ...
    header_icon: str = ...
    index_url_name: Any = ...
    add_url_name: Any = ...
    edit_url_name: Any = ...
    context_object_name: Any = ...
    any_permission_required: Any = ...
    template_name: Any = ...
    def get_context_data(self, **kwargs: Any): ...

class CreateView(PermissionCheckedMixin, TemplateResponseMixin, BaseCreateView):
    model: Any = ...
    form_class: Any = ...
    header_icon: str = ...
    index_url_name: Any = ...
    add_url_name: Any = ...
    edit_url_name: Any = ...
    template_name: str = ...
    permission_required: str = ...
    success_message: Any = ...
    error_message: Any = ...
    def get_add_url(self): ...
    def get_success_url(self): ...
    def get_success_message(self, instance: Any): ...
    def get_error_message(self): ...
    def save_instance(self): ...
    form: Any = ...
    object: Any = ...
    def form_valid(self, form: Any): ...
    def form_invalid(self, form: Any): ...

class EditView(PermissionCheckedMixin, TemplateResponseMixin, BaseUpdateView):
    model: Any = ...
    form_class: Any = ...
    header_icon: str = ...
    index_url_name: Any = ...
    edit_url_name: Any = ...
    delete_url_name: Any = ...
    page_title: Any = ...
    context_object_name: Any = ...
    template_name: str = ...
    permission_required: str = ...
    delete_item_label: Any = ...
    success_message: Any = ...
    error_message: Any = ...
    def get_object(self, queryset: Optional[Any] = ...): ...
    def get_page_subtitle(self): ...
    def get_edit_url(self): ...
    def get_delete_url(self): ...
    def get_success_url(self): ...
    def save_instance(self): ...
    def get_success_message(self): ...
    def get_error_message(self): ...
    form: Any = ...
    object: Any = ...
    def form_valid(self, form: Any): ...
    def form_invalid(self, form: Any): ...
    def get_context_data(self, **kwargs: Any): ...

class DeleteView(PermissionCheckedMixin, TemplateResponseMixin, BaseDeleteView):
    model: Any = ...
    header_icon: str = ...
    index_url_name: Any = ...
    delete_url_name: Any = ...
    template_name: str = ...
    context_object_name: Any = ...
    permission_required: str = ...
    success_message: Any = ...
    def get_object(self, queryset: Optional[Any] = ...): ...
    def get_success_url(self): ...
    def get_page_subtitle(self): ...
    def get_delete_url(self): ...
    def get_success_message(self): ...
    def delete(self, request: Any, *args: Any, **kwargs: Any): ...
