from django.views.generic.base import TemplateResponseMixin
from django.views.generic.list import BaseListView
from typing import Any, Optional
from wagtail.admin.filters import LockedPagesReportFilterSet as LockedPagesReportFilterSet, SiteHistoryReportFilterSet as SiteHistoryReportFilterSet, WorkflowReportFilterSet as WorkflowReportFilterSet, WorkflowTasksReportFilterSet as WorkflowTasksReportFilterSet
from wagtail.admin.views.mixins import SpreadsheetExportMixin as SpreadsheetExportMixin
from wagtail.core.models import Page as Page, PageLogEntry as PageLogEntry, TaskState as TaskState, UserPagePermissionsProxy as UserPagePermissionsProxy, WorkflowState as WorkflowState

class ReportView(SpreadsheetExportMixin, TemplateResponseMixin, BaseListView):
    header_icon: str = ...
    page_kwarg: str = ...
    template_name: str = ...
    title: str = ...
    paginate_by: int = ...
    filterset_class: Any = ...
    def filter_queryset(self, queryset: Any): ...
    is_export: Any = ...
    def dispatch(self, request: Any, *args: Any, **kwargs: Any): ...
    def get_context_data(self, *args: Any, object_list: Optional[Any] = ..., **kwargs: Any): ...

class PageReportView(ReportView):
    template_name: str = ...
    export_headings: Any = ...
    list_export: Any = ...

class LockedPagesView(PageReportView):
    template_name: str = ...
    title: Any = ...
    header_icon: str = ...
    list_export: Any = ...
    filterset_class: Any = ...
    def get_filename(self): ...
    queryset: Any = ...
    def get_queryset(self): ...
    def dispatch(self, request: Any, *args: Any, **kwargs: Any): ...

class WorkflowView(ReportView):
    template_name: str = ...
    title: Any = ...
    header_icon: str = ...
    filterset_class: Any = ...
    export_headings: Any = ...
    list_export: Any = ...
    def get_filename(self): ...
    def get_queryset(self): ...

class WorkflowTasksView(ReportView):
    template_name: str = ...
    title: Any = ...
    header_icon: str = ...
    filterset_class: Any = ...
    export_headings: Any = ...
    list_export: Any = ...
    def get_filename(self): ...
    def get_queryset(self): ...

class LogEntriesView(ReportView):
    template_name: str = ...
    title: Any = ...
    header_icon: str = ...
    filterset_class: Any = ...
    export_headings: Any = ...
    list_export: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def get_filename(self): ...
    def get_queryset(self): ...
    def get_action_label(self, action: Any): ...
