from typing import Any, Optional
from wagtail.admin.auth import user_has_any_page_permission as user_has_any_page_permission
from wagtail.admin.localization import get_available_admin_languages as get_available_admin_languages, get_available_admin_time_zones as get_available_admin_time_zones
from wagtail.admin.menu import MenuItem as MenuItem, SubmenuMenuItem as SubmenuMenuItem, reports_menu as reports_menu, settings_menu as settings_menu
from wagtail.admin.navigation import get_explorable_root_page as get_explorable_root_page
from wagtail.admin.rich_text import HalloFormatPlugin as HalloFormatPlugin, HalloHeadingPlugin as HalloHeadingPlugin, HalloListPlugin as HalloListPlugin, HalloPlugin as HalloPlugin
from wagtail.admin.rich_text.converters.contentstate import link_entity as link_entity
from wagtail.admin.rich_text.converters.editor_html import LinkTypeRule as LinkTypeRule, PageLinkHandler as PageLinkHandler, WhitelistRule as WhitelistRule
from wagtail.admin.rich_text.converters.html_to_contentstate import BlockElementHandler as BlockElementHandler, ExternalLinkElementHandler as ExternalLinkElementHandler, HorizontalRuleHandler as HorizontalRuleHandler, InlineStyleElementHandler as InlineStyleElementHandler, ListElementHandler as ListElementHandler, ListItemElementHandler as ListItemElementHandler, PageLinkElementHandler as PageLinkElementHandler
from wagtail.admin.search import SearchArea as SearchArea
from wagtail.admin.site_summary import PagesSummaryItem as PagesSummaryItem
from wagtail.admin.views.account import email_management_enabled as email_management_enabled, password_management_enabled as password_management_enabled
from wagtail.admin.viewsets import viewsets as viewsets
from wagtail.admin.widgets import Button as Button, ButtonWithDropdownFromHook as ButtonWithDropdownFromHook, PageListingButton as PageListingButton
from wagtail.core import hooks as hooks
from wagtail.core.models import UserPagePermissionsProxy as UserPagePermissionsProxy
from wagtail.core.permissions import collection_permission_policy as collection_permission_policy, task_permission_policy as task_permission_policy, workflow_permission_policy as workflow_permission_policy
from wagtail.core.whitelist import allow_without_attributes as allow_without_attributes, attribute_rule as attribute_rule, check_url as check_url

class ExplorerMenuItem(MenuItem):
    template: str = ...
    def is_shown(self, request: Any): ...
    def get_context(self, request: Any): ...

def register_explorer_menu_item(): ...

class SettingsMenuItem(SubmenuMenuItem):
    template: str = ...

def register_settings_menu(): ...
def register_permissions(): ...

class PageSearchArea(SearchArea):
    def __init__(self) -> None: ...
    def is_shown(self, request: Any): ...

def register_pages_search_area(): ...

class CollectionsMenuItem(MenuItem):
    def is_shown(self, request: Any): ...

def register_collections_menu_item(): ...

class WorkflowsMenuItem(MenuItem):
    def is_shown(self, request: Any): ...

class WorkflowTasksMenuItem(MenuItem):
    def is_shown(self, request: Any): ...

def register_workflows_menu_item(): ...
def register_workflow_tasks_menu_item(): ...
def page_listing_buttons(page: Any, page_perms: Any, is_parent: bool = ..., next_url: Optional[Any] = ...) -> None: ...
def page_listing_more_buttons(page: Any, page_perms: Any, is_parent: bool = ..., next_url: Optional[Any] = ...) -> None: ...
def register_viewsets_urls(): ...
def register_account_set_profile_picture(request: Any): ...
def register_account_change_email(request: Any): ...
def register_account_change_password(request: Any): ...
def register_account_notification_preferences(request: Any): ...
def register_account_preferred_language_preferences(request: Any): ...
def register_account_current_time_zone(request: Any): ...
def register_account_change_name(request: Any): ...
def register_core_features(features: Any): ...

class ReportsMenuItem(SubmenuMenuItem):
    template: str = ...

class LockedPagesMenuItem(MenuItem):
    def is_shown(self, request: Any): ...

class WorkflowReportMenuItem(MenuItem):
    def is_shown(self, request: Any): ...

class SiteHistoryReportMenuItem(MenuItem):
    def is_shown(self, request: Any): ...

def register_locked_pages_menu_item(): ...
def register_workflow_report_menu_item(): ...
def register_workflow_tasks_report_menu_item(): ...
def register_site_history_report_menu_item(): ...
def register_reports_menu(): ...
def register_icons(icons: Any): ...
def add_pages_summary_item(request: Any, items: Any) -> None: ...
def register_core_log_actions(actions: Any): ...
def register_workflow_log_actions(actions: Any): ...
