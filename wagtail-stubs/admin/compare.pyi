from typing import Any
from wagtail.core import blocks as blocks

def text_from_html(val: Any): ...

class FieldComparison:
    is_field: bool = ...
    is_child_relation: bool = ...
    field: Any = ...
    val_a: Any = ...
    val_b: Any = ...
    def __init__(self, field: Any, obj_a: Any, obj_b: Any) -> None: ...
    def field_label(self): ...
    def htmldiff(self): ...
    def has_changed(self): ...

class TextFieldComparison(FieldComparison):
    def htmldiff(self): ...

class RichTextFieldComparison(TextFieldComparison):
    def htmldiff(self): ...

def get_comparison_class_for_block(block: Any): ...

class BlockComparison:
    block: Any = ...
    exists_a: Any = ...
    exists_b: Any = ...
    val_a: Any = ...
    val_b: Any = ...
    def __init__(self, block: Any, exists_a: Any, exists_b: Any, val_a: Any, val_b: Any) -> None: ...
    def is_new(self): ...
    def is_deleted(self): ...
    def has_changed(self): ...
    def htmlvalue(self, val: Any): ...
    def htmldiff(self): ...

class CharBlockComparison(BlockComparison):
    def htmldiff(self): ...
    def htmlvalue(self, val: Any): ...

class RichTextBlockComparison(BlockComparison): ...

class StructBlockComparison(BlockComparison):
    def htmlvalue(self, val: Any): ...
    def htmldiff(self): ...

class StreamBlockComparison(BlockComparison):
    def get_block_comparisons(self): ...
    def htmldiff(self): ...

class StreamFieldComparison(FieldComparison):
    def has_block_ids(self, val: Any): ...
    def htmldiff(self): ...

class ChoiceFieldComparison(FieldComparison):
    def htmldiff(self): ...

class M2MFieldComparison(FieldComparison):
    def get_items(self): ...
    def get_item_display(self, item: Any): ...
    def htmldiff(self): ...
    def has_changed(self): ...

class TagsFieldComparison(M2MFieldComparison):
    def get_item_display(self, tag: Any): ...

class ForeignObjectComparison(FieldComparison):
    def get_objects(self): ...
    def htmldiff(self): ...

class ChildRelationComparison:
    is_field: bool = ...
    is_child_relation: bool = ...
    field: Any = ...
    field_comparisons: Any = ...
    val_a: Any = ...
    val_b: Any = ...
    def __init__(self, field: Any, field_comparisons: Any, obj_a: Any, obj_b: Any) -> None: ...
    def field_label(self): ...
    def get_mapping(self, objs_a: Any, objs_b: Any): ...
    def get_child_comparison(self, obj_a: Any, obj_b: Any): ...
    def get_child_comparisons(self): ...
    def has_changed(self): ...

class ChildObjectComparison:
    model: Any = ...
    field_comparisons: Any = ...
    obj_a: Any = ...
    obj_b: Any = ...
    def __init__(self, model: Any, field_comparisons: Any, obj_a: Any, obj_b: Any) -> None: ...
    def is_addition(self): ...
    def is_deletion(self): ...
    def get_position_change(self): ...
    def get_field_comparisons(self): ...
    def has_changed(self): ...
    def get_num_differences(self): ...

class TextDiff:
    changes: Any = ...
    separator: Any = ...
    def __init__(self, changes: Any, separator: str = ...) -> None: ...
    def to_html(self, tag: str = ..., addition_class: str = ..., deletion_class: str = ...): ...

def diff_text(a: Any, b: Any): ...
