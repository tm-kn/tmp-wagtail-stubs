import django_filters
from django_filters.widgets import SuffixedMultiWidget
from typing import Any, Optional
from wagtail.admin.widgets import AdminDateInput as AdminDateInput, BooleanButtonSelect as BooleanButtonSelect, ButtonSelect as ButtonSelect, FilteredSelect as FilteredSelect
from wagtail.core.models import Page as Page, PageLogEntry as PageLogEntry, Task as Task, TaskState as TaskState, Workflow as Workflow, WorkflowState as WorkflowState

class DateRangePickerWidget(SuffixedMultiWidget):
    template_name: str = ...
    suffixes: Any = ...
    def __init__(self, attrs: Optional[Any] = ...) -> None: ...
    def decompress(self, value: Any): ...

class FilteredModelChoiceIterator(django_filters.fields.ModelChoiceIterator):
    def choice(self, obj: Any): ...

class FilteredModelChoiceField(django_filters.fields.ModelChoiceField):
    widget: Any = ...
    iterator: Any = ...
    filter_accessor: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def get_filter_value(self, obj: Any): ...

class FilteredModelChoiceFilter(django_filters.ModelChoiceFilter):
    field_class: Any = ...

class WagtailFilterSet(django_filters.FilterSet):
    @classmethod
    def filter_for_lookup(cls, field: Any, lookup_type: Any): ...

class LockedPagesReportFilterSet(WagtailFilterSet):
    locked_at: Any = ...

def get_requested_by_queryset(request: Any): ...

class WorkflowReportFilterSet(WagtailFilterSet):
    created_at: Any = ...
    reviewable: Any = ...
    requested_by: Any = ...
    def filter_reviewable(self, queryset: Any, name: Any, value: Any): ...

class WorkflowTasksReportFilterSet(WagtailFilterSet):
    started_at: Any = ...
    finished_at: Any = ...
    workflow: Any = ...
    task: Any = ...
    reviewable: Any = ...
    def filter_reviewable(self, queryset: Any, name: Any, value: Any): ...

def get_audit_log_users_queryset(request: Any): ...

class SiteHistoryReportFilterSet(WagtailFilterSet):
    action: Any = ...
    timestamp: Any = ...
    label: Any = ...
    user: Any = ...

class PageHistoryReportFilterSet(WagtailFilterSet):
    action: Any = ...
    user: Any = ...
    timestamp: Any = ...
