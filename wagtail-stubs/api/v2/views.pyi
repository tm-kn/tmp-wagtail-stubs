from .filters import ChildOfFilter as ChildOfFilter, DescendantOfFilter as DescendantOfFilter, FieldsFilter as FieldsFilter, LocaleFilter as LocaleFilter, OrderingFilter as OrderingFilter, SearchFilter as SearchFilter, TranslationOfFilter as TranslationOfFilter
from .pagination import WagtailPagination as WagtailPagination
from .serializers import BaseSerializer as BaseSerializer, PageSerializer as PageSerializer, get_serializer_class as get_serializer_class
from .utils import BadRequestError as BadRequestError, filter_page_type as filter_page_type, get_object_detail_url as get_object_detail_url, page_models_from_string as page_models_from_string, parse_fields_parameter as parse_fields_parameter
from rest_framework.viewsets import GenericViewSet
from typing import Any
from wagtail.api import APIField as APIField
from wagtail.core.models import Page as Page, Site as Site

class BaseAPIViewSet(GenericViewSet):
    renderer_classes: Any = ...
    pagination_class: Any = ...
    base_serializer_class: Any = ...
    filter_backends: Any = ...
    model: Any = ...
    known_query_parameters: Any = ...
    body_fields: Any = ...
    meta_fields: Any = ...
    listing_default_fields: Any = ...
    nested_default_fields: Any = ...
    detail_only_fields: Any = ...
    name: Any = ...
    seen_types: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def get_queryset(self): ...
    def listing_view(self, request: Any): ...
    def detail_view(self, request: Any, pk: Any): ...
    def find_view(self, request: Any): ...
    def find_object(self, queryset: Any, request: Any): ...
    def handle_exception(self, exc: Any): ...
    @classmethod
    def get_body_fields(cls, model: Any): ...
    @classmethod
    def get_body_fields_names(cls, model: Any): ...
    @classmethod
    def get_meta_fields(cls, model: Any): ...
    @classmethod
    def get_meta_fields_names(cls, model: Any): ...
    @classmethod
    def get_field_serializer_overrides(cls, model: Any): ...
    @classmethod
    def get_available_fields(cls, model: Any, db_fields_only: bool = ...): ...
    @classmethod
    def get_detail_default_fields(cls, model: Any): ...
    @classmethod
    def get_listing_default_fields(cls, model: Any): ...
    @classmethod
    def get_nested_default_fields(cls, model: Any): ...
    def check_query_parameters(self, queryset: Any) -> None: ...
    def get_serializer_class(self): ...
    def get_serializer_context(self): ...
    def get_renderer_context(self): ...
    @classmethod
    def get_urlpatterns(cls): ...
    @classmethod
    def get_model_listing_urlpath(cls, model: Any, namespace: str = ...): ...
    @classmethod
    def get_object_detail_urlpath(cls, model: Any, pk: Any, namespace: str = ...): ...

class PagesAPIViewSet(BaseAPIViewSet):
    base_serializer_class: Any = ...
    filter_backends: Any = ...
    known_query_parameters: Any = ...
    body_fields: Any = ...
    meta_fields: Any = ...
    listing_default_fields: Any = ...
    nested_default_fields: Any = ...
    detail_only_fields: Any = ...
    name: str = ...
    model: Any = ...
    @classmethod
    def get_detail_default_fields(cls, model: Any): ...
    @classmethod
    def get_listing_default_fields(cls, model: Any): ...
    def get_root_page(self): ...
    def get_base_queryset(self): ...
    def get_queryset(self): ...
    def get_object(self): ...
    def find_object(self, queryset: Any, request: Any): ...
    def get_serializer_context(self): ...
